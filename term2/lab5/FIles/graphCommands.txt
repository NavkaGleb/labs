0  - get amount of nodes                                            (params: none)
1  - get amount of edges                                            (params: none)
2  - check if graph is empty                                        (params: none)
3  - check if graph is connected                                    (params: none)
4  - check if graph is cyclic                                       (params: none)
5  - get graph components                                           (params: none)
6  - add node                                                       (params: none)
7  - add edge                                                       (params: int from, int to, (optional: int weight))
8  - erase edge                                                     (params: int from, int to)
9  - erase edges                                                    (params: none)
10 - print graph                                                    (params: none)
11 - get distance from selected node to others (bfs)                (params: int startNode)
12 - get path that formed by dfs                                    (params: int startNode)
13 - get minimal distance from selected node to others (dijkstra)   (params: int startNode)
14 - get minimal distance between all nodes (floyd)                 (params: none)
15 - get sorted nodes order using kahn topological sort             (params: none)
16 - get sorted nodes order using dfs topological sort              (params: none)
17 - get spanning tree using dfs from selected node                 (params: int startNode)
18 - get spanning forest                                            (params: none)
19 - get minimal spanning forest using kruskal's algorithm          (params: none)
20 - exit