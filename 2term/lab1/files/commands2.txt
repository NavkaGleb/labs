00 - print all locations from file
01 - print all location from memory
02 - create new location and append it to the memory ( name, area, monstersMax )
03 - create 'n' locations and append them to the memory ( unsigned int amount )
04 - load all locations from file to memory
05 - save locations to file
06 - delete locations from file
07 - delete locations from memory
-------------------------------------------------
08 - print all monsters from file
09 - print all monsters from binary file
10 - print all monsters from memory
11 - create new monster and append it to the memory ( name, hp, damage, specAttack, attackType, locationId )
12 - create 'n' new random monsters and append them to the memory ( unsigned int amount )
13 - load all monsters from file to memory
14 - load all monsters from binary file to memory
15 - save all monsters from memory to the file
16 - delete certain monster from file ( unsigned int id )
17 - delete certain monster from memory ( unsigned int id )
18 - delete all monsters from file
19 - delete all monsters from memory
20 - update certain monster from file
     ( params: id!, name, hp, damage, specialAttack, specialAttackType ( short ), time, date, locationId
     ! - require param. if you want to leave default value, just write "default" )
21 - search monsters by name fragment ( string nameFragment )
22 - search monsters by hp and by damage ( unsigned short hp, unsigned short damage )
23 - search monsters by special attack type and by time / date
     ( short attackType, string time ( 01:34:21 / hours.minutes.seconds ), string date ( 31.12.2001 / day.month.year ) )
24 - search monsters by location area range, by attackType, by specialAttack
     ( double leftArea, double rightArea, unsigned short attackType, float specialAttack )